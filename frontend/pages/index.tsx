import Head from 'next/head'
import { useState, useEffect } from 'react';
import Navbar from '../components/Navbar';
import LoginModal from '../components/LoginModal';
import RegistrationModal from '../components/RegistrationModal';
import styles from '../styles/Home.module.css'
import useStore from '../store';

import {
  User,
  API_BASE_URL,
  LoginParameters,
  RegistrationParameters
} from '../data';

const Home: React.FC = () => {
  const [showLogin, setShowLogin] = useState(false);
  const [showRegistration, setShowRegistration] = useState(false);
  const [user, setUser] = useState<User | null>(null);

  let store: any = useStore();
  console.log(store);

  useEffect(() => {
    if(store.sessionToken !== null) {
      fetchUser(store.sessionToken);
    }
  }, [])

  const login = async (p: LoginParameters) => {
    let result = await fetch(`${API_BASE_URL}/login`, {
      method: "POST",
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(p),
    });

    let json = JSON.parse(await result.json());

    store.setToken(json.sessionToken);
    console.log(store);
  }

  const fetchUser = async(token: string) => {
    if(store.sessionToken !== null) {
      fetch(`${API_BASE_URL}/user`, {
        headers: {
          'Authorization': token,
        }
      }).then(res => res.json()).then(res => setUser(JSON.parse(res)));
    }
  }

  const register = async (p: RegistrationParameters) => {
    let result = await fetch(`${API_BASE_URL}/register`, {
      method: "POST",
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(p)
    });

    let json = await result.json();

    setUser(JSON.parse(json));
  }

  let main = user ? (
    <div>
      <h1>Hello {user.name}</h1>
    </div>
  ) : (
    <main className={styles.main}>
      <h1>Hello</h1>
      <button onClick={() => { setShowLogin(!showLogin) }}>Login</button>
      <button onClick={() => { setShowRegistration(!showRegistration) }}>Register</button>

      <div id="modal-root" />

      <RegistrationModal
        onClose={() => setShowRegistration(false) }
        onSubmit={(params: RegistrationParameters) => {
          register(params)
          setShowRegistration(false);
        }}
        show={showRegistration}
      />

      <LoginModal
        onClose={() => setShowLogin(false) }
        onSubmit={(params: LoginParameters) => {
          login(params);
          setShowLogin(false);
        }}
        show={showLogin}
      />
    </main>
  );


  return (
    <div className={styles.container}>
      <Head>
        <title>Workout Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar
        onLogin={() => setShowLogin(true) }
        onRegister={() => setShowRegistration(true) }
      />

      { main }

    </div>
  )
}

export default Home;
